from abc import ABC, abstractmethod

class Vehicle(ABC):
    def __init__(self, make, model):
        self._make = make
        self._model = model

    @property
    def make(self):
        return self._make

    @make.setter
    def make(self, value):
        self._make = value

    @property
    def model(self):
        return self._model

    @model.setter
    def model(self, value):
        self._model = value

    @abstractmethod
    def drive(self):
        pass

class Car(Vehicle):
    def drive(self):
        return "Vroom!"

class Motorcycle(Vehicle):
    def drive(self):
        return "Rumble!"
     
